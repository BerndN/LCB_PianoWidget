
-- declaring extension as widget, followed by identifier
widget community.livecode.widget.piano

-- dependancy declarations
use com.livecode.canvas
use com.livecode.widget
use com.livecode.engine
use com.livecode.library.widgetutils

-- adding metadata to ensure the extension displays correctly in livecode
metadata title is "1OctavePiano"
metadata author is "Paul McClernan"
metadata version is "0.1"
metadata preferredSize is "144,75"
-- metadata iconPath is
metadata svgicon is "M0,0v69.6c0,1.4,1.1,2.5,2.4,2.5h9.7c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1 c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.7 c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1H94c1.3,0,2.4-1.1,2.4-2.5V0H0z M95.4,69.6c0,0.8-0.6,1.5-1.4,1.5h-9.8c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1L95.4,69.6z M80.4,71.1h-9.7 c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.6v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C81.8,70.4,81.2,71.1,80.4,71.1z M57,71.1c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5 L57,71.1z M53.1,71.1h-9.8c-0.8,0-1.4-0.7-1.4-1.5V1H50v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C54.5,70.4,53.8,71.1,53.1,71.1z M28.3,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1v68.6c0,0.8-0.6,1.5-1.4,1.5h-9.8C28.9,71.1,28.3,70.4,28.3,69.6z M14.7,69.6V46.9 h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.6l0,0v0.3c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5H16C15.3,71.1,14.7,70.4,14.7,69.6z M12.1,71.1H2.4c-0.8,0-1.4-0.7-1.4-1.5V1h8.1v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C13.5,70.4,12.9,71.1,12.1,71.1z"

private variable mState        as String
private variable mColor        as Color
private variable mHiliteColor  as Color
private variable mPresets    	as List
private variable mPath    		as String
private variable mHilited      as Boolean
private variable mToggleHilite as Boolean
private variable mMaintainAspectRatio as Boolean
private variable mFlipVertically     as Boolean -- some SVG Paths need to be flipped (all font awesome SVG paths do, Illustrator SVG does not
private variable mAngle     as Real

property iconColor            get getColor          set setColor
metadata iconColor.editor is "com.livecode.pi.color"

property iconHiliteColor      get getHiliteColor    set setHiliteColor
metadata iconHiliteColor.editor is "com.livecode.pi.color"
metadata iconPath.editor is "com.livecode.pi.text"

property isHilited            get mHilited          		set mHilited
property toggleHilite         get mToggleHilite     		set mToggleHilite
property maintainAspectRatio  get mMaintainAspectRatio   set mMaintainAspectRatio
property flipVertically       get mFlipVertically        set mFlipVertically
property iconAngle			  	get mAngle       				set mAngle
----------
-- called when widget is created
public handler OnCreate()
	put "up" into mState
	put "M0,0v69.6c0,1.4,1.1,2.5,2.4,2.5h9.7c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1 " & \
		"c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.7" & \
		"c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1H94c1.3,0,2.4-1.1,2.4-2.5V0H0z "& \
		 "M95.4,69.6c0,0.8-0.6,1.5-1.4,1.5h-9.8c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1L95.4,69.6z M80.4,71.1h-9.7 "& \
		"c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.6v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C81.8,70.4,81.2,71.1,80.4,71.1z "& \
		 "M57,71.1c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5 "& \
		"L57,71.1z M53.1,71.1h-9.8c-0.8,0-1.4-0.7-1.4-1.5V1H50v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C54.5,70.4,53.8,71.1,53.1,71.1z "& \
		 "M28.3,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1v68.6c0,0.8-0.6,1.5-1.4,1.5h-9.8C28.9,71.1,28.3,70.4,28.3,69.6z M14.7,69.6V46.9 "& \
		"h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.6l0,0v0.3c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5H16C15.3,71.1,14.7,70.4,14.7,69.6z "& \
		 "M12.1,71.1H2.4c-0.8,0-1.4-0.7-1.4-1.5V1h8.1v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C13.5,70.4,12.9,71.1,12.1,71.1z"  into mPath
	put color [0,0,0] into mColor
	put stringToColor("127,0,0") into mHiliteColor
	put 0 into mAngle

	put false into mHilited
	put false into mToggleHilite
	put true into mMaintainAspectRatio
	put false into mFlipVertically

	variable tArray as Array
	put the empty array into tArray
	put the empty list into mPresets

	put "0" into tArray["name"]
	put "M0,0v69.6c0,1.4,1.1,2.5,2.4,2.5h9.7c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1 " & \
		"c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.7" & \
		"c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1H94c1.3,0,2.4-1.1,2.4-2.5V0H0z "& \
		 "M95.4,69.6c0,0.8-0.6,1.5-1.4,1.5h-9.8c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1L95.4,69.6z M80.4,71.1h-9.7 "& \
		"c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.6v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C81.8,70.4,81.2,71.1,80.4,71.1z "& \
		 "M57,71.1c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5 "& \
		"L57,71.1z M53.1,71.1h-9.8c-0.8,0-1.4-0.7-1.4-1.5V1H50v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C54.5,70.4,53.8,71.1,53.1,71.1z "& \
		 "M28.3,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1v68.6c0,0.8-0.6,1.5-1.4,1.5h-9.8C28.9,71.1,28.3,70.4,28.3,69.6z M14.7,69.6V46.9 "& \
		"h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.6l0,0v0.3c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5H16C15.3,71.1,14.7,70.4,14.7,69.6z "& \
		 "M12.1,71.1H2.4c-0.8,0-1.4-0.7-1.4-1.5V1h8.1v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C13.5,70.4,12.9,71.1,12.1,71.1z" into tArray["path"]
	push tArray onto mPresets

end handler
----------
-- this handler is called when the widget is saved
public handler OnSave(out rProperties as Array)
	put the empty array into rProperties

	put mPath into rProperties["svg path"]
	put colorToString(mColor, true) into rProperties["color"]
	put colorToString(mHiliteColor, true) into rProperties["hilite color"]
	put mHilited into rProperties["hilited"]
	put mToggleHilite into rProperties["toggle hilite"]
	put mMaintainAspectRatio into rProperties["maintain aspect ratio"]
	put mFlipVertically into rProperties["flip vertically"]
	put mAngle into rProperties["angle"]

	return rProperties
end handler

-- this handler is called when the widget is loaded
public handler OnLoad(in pProperties as Array)
	put pProperties["svg path"] into mPath
	put stringToColor(pProperties["color"]) into mColor
	put stringToColor(pProperties["hilite color"]) into mHiliteColor
	put pProperties["hilited"] into mHilited
	put pProperties["toggle hilite"] into mToggleHilite
	put pProperties["maintain aspect ratio"] into mMaintainAspectRatio
	put pProperties["flip vertically"] into mFlipVertically
	put pProperties["angle"] into mAngle
end handler
----------
public handler OnMouseUp()
  if the current mouse position is within my bounds then
  	if mToggleHilite then
	  	put not mHilited into mHilited
  	end if
     post "mouseUp" to my script object with [FormatInt(the click button)] -- formatint needed until dp-2
  end if
  put "up" into mState
  redraw all
end handler

public handler OnMouseCancel()
	put "up" into mState
	redraw all
end handler

public handler OnMouseDown()
	put "down" into mState
	redraw all
	post "mouseDown" to my script object with [FormatInt(the click button)]
end handler

-- private instance variables
public handler OnMouseMove() returns optional any
	variable tXMousePos as Real
	variable tYMousePos as Real
	variable tReturnStr as String
	put the x of the mouse position into tXMousePos
	put the y of the mouse position into tYMousePos
	if tYMousePos < 0 then
		put 0 into tYMousePos
	end if
	put tXMousePos formatted as string & "," & tYMousePos formatted as string into tReturnStr
	post "mouseMove" && tReturnStr
end handler

public handler setIsHilited(in pBoolean as Boolean)
	put pBoolean into mHilited
	redraw all
end handler

public handler setMaintainAspectRatio(in pBoolean as Boolean)
	put pBoolean into mMaintainAspectRatio
	redraw all
end handler

public handler setPath(in pPath as String) returns nothing
	put pPath into mPath
	redraw all
end handler

public handler setColor(in pColor as String) returns nothing
	put stringToColor(pColor) into mColor
	redraw all
end handler

public handler getColor() returns String
	return colorToString(mColor, false)
end handler

public handler setHiliteColor(in pColor as String) returns nothing
	put stringToColor(pColor) into mHiliteColor
	redraw all
end handler

public handler getHiliteColor() returns String
	return colorToString(mHiliteColor, false)
end handler

public handler setPathPreset(in pPresetName as String) returns nothing
	variable tElement
	repeat for each element tElement in mPresets
		if tElement["name"] is pPresetName then
			put tElement["path"] into mPath
			redraw all
			exit repeat
		end if
	end repeat
end handler

public handler getPathPreset() returns String
	variable tElement
	repeat for each element tElement in mPresets
		if tElement["path"] is mPath then
			return tElement["name"]
		end if
	end repeat
	return ""
end handler

public handler setAngle(in pAngle as Number) returns nothing
	put pAngle into mAngle
	redraw all
end handler

-- called whenever LiveCode needs to redraw the widget
public handler OnPaint()
	variable tPath as Path
	put path mPath into tPath
	variable tPathC as Path
	put rectangle path of rectangle [0,my height /1.55 ,my width / 7 ,my height] into tPathC
   -- put line path from point [0,0] to point [my width,my height] into tPathB
	-- variable tBounds
	--------------------------------------------------------------------  scale to fit within widget and maintain aspect ratio
	--if mMaintainAspectRatio then
	--	transform tPath by scaleAndMaintainAspectRatioTransform(the bounding box of tPath, my bounds)
	--else
	 --scale tPathB by [my width / the width of the bounding box of tPathB, my height / the height of the bounding box of tPathB]

	 scale tPath by [my width / the width of the bounding box of tPath, my height / the height of the bounding box of tPath]
	--end if

	if mState is "up" and mHilited is false then
		set the paint of this canvas to solid paint with mColor
	else
		set the paint of this canvas to solid paint with mHiliteColor
	end if

	fill tPath on this canvas
	-- Draw paths with line width 20
	set the stroke width of this canvas to 10
	set the paint of this canvas to solid paint with color [0,0,1,0.5]
   --set the paint of this canvas to solid paint with color [0,0,1]
	fill tPathC on this canvas
end handler

-- Translated from some Skia code
private handler scaleAndMaintainAspectRatioTransform(in pSrcBounds as Rectangle, in pDestBounds as Rectangle) returns Transform
	-- Prepare values for matrix transformation
	variable isLarger as Boolean
	variable sX as Number
	variable sY as Number
	put false into isLarger
	put the width of pDestBounds / the width of pSrcBounds into sX
	put the height of pDestBounds / the height of pSrcBounds into sY
	if sX > sY then
		put true into isLarger
		put sY into sX
	else
		put sX into sY
	end if
	variable tX as Number
	variable tY as Number
	put the left of pDestBounds - (the left of pSrcBounds*sX) into tX
	put the top of pDestBounds - (the top of pSrcBounds*sY) into tY
	variable tDiff as Number
	if isLarger then
		put my width - (the width of pSrcBounds*sY) into tDiff
	else
		put my height - (the height of pSrcBounds*sY) into tDiff
	end if
	-- align center
	divide tDiff by 2
	if isLarger then
		add tDiff to tX
	else
		add tDiff to tY
	end if
	-- create transformation matrix and apply
	variable tTransform as Transform
	put transform with matrix [sX, 0, 0, sY, tX, tY] into tTransform
	return tTransform
end handler

-- Needed until dp-2
handler FormatInt(in pNumber as Number) returns String
	variable tNumberString as String

	put pNumber formatted as string into tNumberString

	if "." is in tNumberString then
		variable tDotOffset
		put the first offset of "." in tNumberString into tDotOffset
		delete char tDotOffset to (the number of chars in tNumberString) of tNumberString
	end if
	return tNumberString
end handler

end widget
