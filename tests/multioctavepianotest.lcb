
/**
This widget is a one octave virtual piano.

Name: noteOn
Type: message
Syntax: noteOn
Summary: Sent when a key on the piano set to it's 'on' state.

Example:
on noteOn pNoteNum,pNoteName
	put "noteOn " & pNoteNum && pNoteName
end noteOn

Description:
Handle the noteOn message in the widget's object script to respond to
'note down' clicks on the piano's individual note keys.
*/
/**
Name: noteOff
Type: message
Syntax: noteOff
Summary: Sent when a key on the piano released from it's 'on' state.

Example:
on noteOff pNoteNum,pNoteName
	put "noteOff " & pNoteNum && pNoteName
end noteOff

Description:
Handle the noteOff message in the widget's object script to respond to
'note release' messages from the piano's individual note keys.
*/

-- declaring extension as widget, followed by identifier
widget community.livecode.widget.tests

-- dependancy declarations
use com.livecode.canvas
use com.livecode.string
use com.livecode.widget
use com.livecode.engine
use com.livecode.library.widgetutils

-- adding metadata to ensure the extension displays correctly in livecode
metadata title is "Tests"
metadata author is "Paul McClernan"
metadata version is "0.1"
metadata preferredSize is "96,72"
-- metadata iconPath is
metadata svgicon is "M0,0v69.6c0,1.4,1.1,2.5,2.4,2.5h9.7c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1 c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.7 c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1H94c1.3,0,2.4-1.1,2.4-2.5V0H0z M95.4,69.6c0,0.8-0.6,1.5-1.4,1.5h-9.8c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1L95.4,69.6z M80.4,71.1h-9.7 c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.6v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C81.8,70.4,81.2,71.1,80.4,71.1z M57,71.1c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5 L57,71.1z M53.1,71.1h-9.8c-0.8,0-1.4-0.7-1.4-1.5V1H50v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C54.5,70.4,53.8,71.1,53.1,71.1z M28.3,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1v68.6c0,0.8-0.6,1.5-1.4,1.5h-9.8C28.9,71.1,28.3,70.4,28.3,69.6z M14.7,69.6V46.9 h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.6l0,0v0.3c0,1.1,0.9,2,1.9,2h2.5v22.7c0,0.8-0.6,1.5-1.4,1.5H16C15.3,71.1,14.7,70.4,14.7,69.6z M12.1,71.1H2.4c-0.8,0-1.4-0.7-1.4-1.5V1h8.1v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7C13.5,70.4,12.9,71.1,12.1,71.1z"

private variable mColor as Color
private variable mHiliteColor as Color

private variable mBlackKeysList as List
private variable mWhiteKeysList as List
private variable mSelectedKeyList as List
private variable mSelectedKey as optional Array
private variable mBackgroundPath as Path

private variable mMaintainAspectRatio as Boolean

property "octave" get mOctaveStr set setOctave
metadata octave.editor is "com.livecode.pi.enum"
metadata octave.options is "-2,-1,0,1,2,3,4,5,6,7,8"
metadata octave.default is "3"
metadata octave.label is "Octave"
private variable mOctaveStr as String
private variable mOctave as Integer
constant kOctaveCount is 8
metadata iconHiliteColor.editor is "com.livecode.pi.color"
metadata iconPath.editor is "com.livecode.pi.text"

property maintainAspectRatio  get mMaintainAspectRatio   set mMaintainAspectRatio

public variable mPianoMouseButtonDown as Boolean
property "PianoMouseButtonDown" get mPianoMouseButtonDown set mPianoMouseButtonDown

private handler setOctave(in pOctaveStr as String) returns nothing
   put pOctaveStr into mOctaveStr
	put ((pOctaveStr parsed as number)+2)*12 into mOctave
end handler
--------------------------------------------------------------------------------------------------------------
--- called when widget is created
public handler OnCreate()
	put path "M0,0v69.6c0,1.4,1.1,2.5,2.4,2.5h9.7c0.8,0,1.5-0.4,2-1.1c0.4,0.7,1.1,1.1,2,1.1h9.8 c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.8c0.8,0,1.5-0.4,2-1.1 c0.4,0.7,1.1,1.1,2,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1h9.7c0.8,0,1.5-0.4,1.9-1.1c0.4,0.6,1.1,1.1,1.9,1.1H94 c1.3,0,2.4-1.1,2.4-2.5V0H0z" into mBackgroundPath
	put color [0,0,0] into mColor
	put stringToColor("0,255,0") into mHiliteColor
	put false into mMaintainAspectRatio
   put false into mPianoMouseButtonDown

   -- put the empty array into mSelectedKey

   variable tArray as Array
   put the empty array into tArray
	--------------------------------------------White Keys--------------------------------------------
	put "C" into tArray["name"]
	put path "M12.1,71.1H2.4c-0.8,0-1.4-0.7-1.4-1.5V1h8.1v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7 C13.5,70.4,12.9,71.1,12.1,71.1z" into tArray["path"]
	put false into tArray["hilighted"]
	put 0 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put "D" into tArray["name"]
	put path "M14.7,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.6l0,0v0.3c0,1.1,0.9,2,1.9,2h2.5v22.7 c0,0.8-0.6,1.5-1.4,1.5H16C15.3,71.1,14.7,70.4,14.7,69.6z" into tArray["path"]
	put false into tArray["hilighted"]
	put 2 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put  "E" into tArray["name"]
	put path "M28.3,69.6V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1v68.6c0,0.8-0.6,1.5-1.4,1.5h-9.8 C28.9,71.1,28.3,70.4,28.3,69.6z" into tArray["path"]
	put false into tArray["hilighted"]
	put 4 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put "F" into tArray["name"]
	put path "M53.1,71.1h-9.8c-0.8,0-1.4-0.7-1.4-1.5V1H50v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7 C54.5,70.4,53.8,71.1,53.1,71.1z" into tArray["path"]
	put false into tArray["hilighted"]
	put 4 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put "G" into tArray["name"]
	put path "M57,71.1c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.7v43.9c0,1.1,0.9,2,1.9,2h2.5v22.7 c0,0.8-0.6,1.5-1.4,1.5L57,71.1z" into tArray["path"]
	put false into tArray["hilighted"]
	put 7 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put "A" into tArray["name"]
	put path "M80.4,71.1h-9.7c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h3.6v43.9c0,1.1,0.9,2,1.9,2h2.5 v22.7C81.8,70.4,81.2,71.1,80.4,71.1z" into tArray["path"]
	put false into tArray["hilighted"]
	put 9 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList

	put "B" into tArray["name"]
	put path "M95.4,69.6c0,0.8-0.6,1.5-1.4,1.5h-9.8c-0.8,0-1.4-0.7-1.4-1.5V46.9h2.5c1,0,1.9-0.9,1.9-2V1h8.1 L95.4,69.6z" into tArray["path"]
	put false into tArray["hilighted"]
	put 11 into tArray["octaveoffset"]
	push tArray onto mWhiteKeysList
   --------------------------------------------Black Keys--------------------------------------------
	put "C#Db" into tArray["name"]
	put path "M19.1,0v44.6c0,1.1-0.9,2-1.9,2H11c-1,0-1.9-0.9-1.9-2V0H19.1z" into tArray["path"]
	put false into tArray["hilighted"]
	put 1 into tArray["octaveoffset"]
	push tArray onto mBlackKeysList

	put "D#Eb" into tArray["name"]
	put path "M32.7,0v44.6c0,1.1-0.9,2-1.9,2h-6.2c-1,0-1.9-0.9-1.9-2V0H32.7z" into tArray["path"]
	put false into tArray["hilighted"]
	put 3 into tArray["octaveoffset"]
	push tArray onto mBlackKeysList

	put "F#Gb" into tArray["name"]
	put path "M60,0v44.6c0,1.1-0.9,2-1.9,2h-6.2c-1,0-1.9-0.9-1.9-2V0H60z" into tArray["path"]
	put false into tArray["hilighted"]
	put 6 into tArray["octaveoffset"]
	push tArray onto mBlackKeysList

	put "G#Ab" into tArray["name"]
	put path "M73.7,0v44.6c0,1.1-0.9,2-1.9,2h-6.2c-1,0-1.9-0.9-1.9-2V0H73.7z" into tArray["path"]
	put false into tArray["hilighted"]
	put 8 into tArray["octaveoffset"]
	push tArray onto mBlackKeysList

	put "A#Bb" into tArray["name"]
	put path "M87.3,0v44.6c0,1.1-0.9,2-1.9,2h-6.2c-1,0-1.9-0.9-1.9-2V0H87.3z" into tArray["path"]
	put false into tArray["hilighted"]
	put 10 into tArray["octaveoffset"]
	push tArray onto mBlackKeysList
end handler

-- called whenever LiveCode needs to redraw the widget
public handler OnPaint()
	variable tPath as Path
	variable tWhiteKey as Array
	variable tBlackKey as Array
   variable tOct as Integer
   variable tOctWidth as Integer
   variable tOctHeight as Integer
   variable tOctPosX as Integer
   variable tOctPosY as Integer
   variable tRect
   variable tNum as Number
   variable tSplits as Number
   variable tRectList as List
   put 0 into tOctPosX  --- Horzontal
   put 0 into tOctPosY --- Vertical
   put my width into tOctWidth
   put my height into tOctHeight
   put rectangle [tOctPosY,tOctPosX,tOctWidth,tOctHeight] into tRect

   put 8 into tSplits
   put getRectListSplitHorz(tRect,tSplits) into tRectList
   -- log tRectList
	set the paint of this canvas to solid paint with color [0,0,0,1]
   set the stroke width of this canvas to 2
   repeat with tNum from 1 up to tSplits
      put rectangle path of (element tNum of tRectList) into tPath
      stroke tPath on this canvas
   end repeat
   -- fill this canvas
end handler

public handler getRectListSplitHorz(in pRect, in pDiv as Integer) returns List
   variable tWidth as Integer
   variable tHeight as Integer
   variable tLeft as Integer
   variable tTop as Integer
   variable tRect
   variable tRectList as List
   variable tSplitWidth as Integer
   variable tCounter as Integer
   if pDiv < 2 then
      put 2 into pDiv
   end if
   put the top of pRect into tTop
   put the left of pRect into tLeft
   put the bottom of pRect into tHeight
   put the right of pRect into tWidth
   put tWidth/pDiv into tSplitWidth
   put rectangle [tLeft,tTop,tSplitWidth,tHeight] into tRect
   push tRect onto tRectList
   repeat with tCounter from 2 up to pDiv
      put rectangle [tSplitWidth*tCounter,tTop,tSplitWidth,tHeight] into tRect
      push tRect onto tRectList
   end repeat
   return tRectList
end handler

public handler getRectListSplitVert(in pRect, in pDiv as Integer) returns List
   variable tWidth as Integer
   variable tHeight as Integer
   variable tLeft as Integer
   variable tTop as Integer
   variable tRect
   variable tRectList as List
   variable tSplitHeight as Integer
   variable tCounter as Integer
   if pDiv < 2 then
      put 2 into pDiv
   end if
   put the top of pRect into tTop
   put the left of pRect into tLeft
   put the bottom of pRect into tHeight
   put the right of pRect into tWidth
   put tHeight/pDiv into tSplitHeight
   put rectangle [tLeft,tTop,tWidth,tSplitHeight] into tRect
   push tRect onto tRectList
   repeat with tCounter from 2 up to pDiv
      put rectangle [tLeft,tSplitHeight*tCounter,tWidth,tSplitHeight] into tRect
      push tRect onto tRectList
   end repeat
   return tRectList
end handler

end widget
